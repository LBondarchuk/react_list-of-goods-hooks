{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","useState","type","setType","isReversed","setIsReversed","className","onClick","goods","visibleGoods","sort","a","b","localeCompare","length","reverse","setList","map","good","ReactDOM","render","document","getElementById"],"mappings":"uOAIaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAgB,WAC3B,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAyBA,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEJ,KAAK,SACLI,UAAS,yBAA6B,aAATJ,EAAsB,GAAK,YACxDK,QAAS,kBAAMJ,EAAQ,aAHzB,iCAQA,wBACED,KAAK,SACLI,UAAS,4BAAgC,WAATJ,EAAoB,GAAK,YACzDK,QAAS,kBAAMJ,EAAQ,WAHzB,4BAQA,wBACED,KAAK,SACLI,UAAS,4BAAuBF,EAAa,GAAK,YAClDG,QAAS,kBAAMF,GAAeD,IAHhC,sBAQEA,GAAcF,IACd,wBACEA,KAAK,SACLI,UAAU,4BACVC,QAAS,WACPF,GAAc,GACdF,EAAQ,KALZ,sBAaJ,6BACE,6BAjEU,SAACK,GACf,IAAMC,EAAY,YAAOD,GAEzB,OAAQN,GACN,IAAK,WACHO,EAAaC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAC5C,MACF,IAAK,SACHH,EAAaC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,OAASF,EAAEE,UACzC,MACF,IAAK,QACH,OAAO,YAAIN,GASf,OAJIJ,GACFK,EAAaM,UAGRN,EA8CAO,CAAQjB,GAAiBkB,KAAI,SAAAC,GAAI,OAAI,oBAAI,UAAQ,OAAZ,SAAoBA,eCpFpEC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.40dc03a8.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App: React.FC = () => {\n  const [type, setType] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n\n  const setList = (goods : string[]) => {\n    const visibleGoods = [...goods];\n\n    switch (type) {\n      case 'alphabet':\n        visibleGoods.sort((a, b) => a.localeCompare(b));\n        break;\n      case 'length':\n        visibleGoods.sort((a, b) => a.length - b.length);\n        break;\n      case 'reset':\n        return [...goods];\n      default:\n        break;\n    }\n\n    if (isReversed) {\n      visibleGoods.reverse();\n    }\n\n    return visibleGoods;\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${type === 'alphabet' ? '' : 'is-light'}`}\n          onClick={() => setType('alphabet')}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${type === 'length' ? '' : 'is-light'}`}\n          onClick={() => setType('length')}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${isReversed ? '' : 'is-light'}`}\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {(isReversed || type) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setIsReversed(false);\n              setType('');\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {setList(goodsFromServer).map(good => <li data-cy=\"Good\">{good}</li>)}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}